Part 1. Установка ОС
cat /etc/issue # узнать версию Ubuntu

Part 2. Создание пользователя
useradd -m user1 # добавить нового пользователя
cat /etc/passwd # просмотреть, что пользователь добавлен
sudo passwd user1 # установить пароль для user1
su user1 # сменить пользователя на user1
exit # выйти из пользователя
sudo usermod -aG adm user1 # добавить user1 в группу администратора, так он может просматривать файлы в /var/log
ls -l /var/log # проверка прав в папке /var/log
sudo userdel -r user1 # удалить пользователя

hostnamectl # посмотреть информацию о хосте, hostname - и есть машина или сервер

Part 3. Настройка сети ОС
Для изменения имени сервера нужно изменить его в 2х файлах:
sudo nano /etc/hosts
sudo nano /etc/hostname

sudo cp /etc/localtime /etc/localtime.bak # создать резервную копию текущего часового пояса
sudo ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime # меняет время в Linux на указанный пояс Europe/Moscow
ls usr/share/zoneinfo # посмотреть все часовые пояса
date # проверить свой часовой пояс

внешний ip-адрес шлюза (ip) и внутренний IP-адрес шлюза, он же ip-адрес по умолчанию (gw - gateway - роутер).
ifconfig # выведет названия сетевых интерфейсов enp0s3 и lo, а также ip, subnetmask
или
ip addr
# интерфейс lo (loopback - локальная петля) - 127.0.0.1
нужен для того, чтобы компьютер даже при отсутствии сетевых интерфейсов мог обращаться к самому себе по IP 127.0.0.1
route # посмотреть информацию по gateway роутера

Есть 3 вида ip:
1. lo - localhost - всегда 127.0.0.1 (выводится под интерфейсом lo в командах ip addr, ifconfig, ip -br a)
2. ip в локальной сети (те, что создает роутер - выводится под интерфейсом enp* или eth* в командах ip addr, ifconfig, ip -br a) 
3. внешний ip - ip роутера, через который происходит выход в интернет - также называется gateway
(можно ввести в браузере сайт https://ifconfig.me/, чтобы узнать этот ip, либо в терминале - curl ifconfig.me или curl ident.me)

# DHCP (Dynamic Host Configuration Protocol)
Протокол DHCP является клиент-серверным, то есть в его работе участвуют клиент DHCP и сервер DHCP.
Передача данных производится при помощи протокола UDP. По умолчанию запросы от клиента делаются к серверу на порт 67,
сервер в свою очередь отвечает клиенту на порт 68, выдавая адрес IP и другую необходимую информацию, такую, как сетевую маску,
маршрутизатор и серверы DNS.

DHCP (англ. Dynamic Host Configuration Protocol — протокол динамической настройки узла) — прикладной протокол,
позволяющий сетевым устройствам автоматически получать IP-адрес и другие параметры, необходимые для работы в сети TCP/IP.
Данный протокол работает по модели «клиент-сервер». Для автоматической конфигурации компьютер-клиент на этапе конфигурации сетевого устройства
обращается к так называемому серверу DHCP и получает от него нужные параметры.
Сетевой администратор может задать диапазон адресов, распределяемых сервером среди компьютеров.
Это позволяет избежать ручной настройки компьютеров сети и уменьшает количество ошибок.
Протокол DHCP используется в большинстве сетей TCP/IP.

sudo nano /etc/netplan/00-installer-config.yaml # внесение статичных настроек ip, gw, dns (обязательно с соблюдением пробелов)
dhcp4 - если оставить true, то ip-адреса будут выдаваться автоматически

# This is the network config written by 'subiquitu'

network:
  renderer: NetworkManager
  ethernets:
    enp0s3:
      addresses: [192.168.0.119/24]
      gateway: 192.168.0.1
      nameservers:
        addresses: [1.1.1.1, 8.8.8.8]
      routes:
       - to: default
         via: 192.168.0.1
       dhcp4: false
   version: 2
    
Далее сохранить эти настройки перезапустить sudo reboot now и проверить через ping yandex.com, есть ли подключение к сети

Part 4. Обновление ОС
sudo apt update # вычисляет, сколько пакетов может быть обновлено
sudo apt full-upgrade # установка всех обновлений
sudo do-release-upgrade # обновление системы до новой версии (если она есть)

Part 5. Использование команды sudo
sudo позволяет выполнять команды от имени root
sudo su # зайти под root-ом, чтобы не нужно было в командах прописывать sudo, но тут все же напишу с ними

Для изменения имени сервера, надо изменить это имя в 2х файлах:
    /etc/hosts
    /etc/hostname

sudo usermod -aG adm user1 # добавляем user1 в группу adm

ls -l /etc/hosts # проверить права в файле
ls -l /etc/hostname # проверить права в файле

sudo chmod g+w /etc/hosts # дать права на запись для группы adm
sudo chmod g+w /etc/hostname # дать права на запись для группы adm

sudo nano /etc/hosts # изменить имя сервера
sudo nano /etc/hostname # изменить имя сервера

sudo reboot now # перезагрузка, после этого имя сервера изменилось

Part 6. Установка и настройка службы времени
timedatectl show # команда выдает информацию о настройках времени

Part 7. Установка и использование текстовых редакторов
sudo apt install joe # установка редактора joe
sudo apt install mc # установка редактора mcedit
sudo apt install vim # установка редактора vim

joe: Ctrl+K - сохранить, а затем клавишу Q - для выхода
mcedit: Ecs, далее в меню выбрать сохранить или нет
vim: i - перейти в режим печати, Esc - выйти из режима печати, :wq - выйти с сохранением изменений, :q! - выйти без сохранения изменений

grep user ./* - поиск слова user в текущей дериктории, на выводе строки, содержащие данное слово, из всех файлов
grep user ./* | sed 's/user/friend/g' - в выводе заменит слово user на слово friend, при этом файлы НЕ изменятся
grep user ./* | sed 's/user/friend/gw ./*' - в выводе заменит слово user на слово friend, при этом файлы изменятся

Part 8. Установка и базовая настройка сервиса SSHD
sudo apt-get install openssh-server # установить ssh
sudo systemctl enable sshd # добавить в автозагрузку, чтобы служба запускалась автоматически
sudo systemctl disable sshd # удалить из автозагрузки

Если после удаления из автозагрузки снова попытаться добавить командой:
sudo systemctl enable sshd
выдаст ошибку Unit file sshd.service does not exist
поэтому надо обратиться по имени:
sudo systemctl enable ssh
после этого можно по команде ssh подключаться к удаленному серверу:
ssh 127.0.0.1 или ssh -l user1 127.0.0.1 или ssh user1@127.0.0.1
exit для прекращения сеанса

service ssh status # проверить активен ли сервис и слушает ли порт 22
service ssh start # сделать сервис активным

Изменение порта SSH:
sudo nano /etc/ssh/sshd_config
в файле нужно раскомментировать строку #Port 22 и заменить порт на другой, сохранить файл
в консоли перезапустить cbcntve: systemctl restart sshd
проверяем статус: service sshd status
netstat -tulpn # проверяет статус портов на прием и передачу, то есть порт (код, который ранее внесли) должен быть в 2х строках
sudo ufw status # проверяем статус firewall (если inactive, то команда sudo ufw enable)
sudo ufw allow 2022 # открываем доступ по порту 2022 (2022 - это пример, вносится тот же код, на который меняли порт 22)
после этого порты появятся в статусе (sudo ufw status)
перезапустим firewall: ufw reload
netstat -tan

Part 9. Установка и использование утилит top, htop
top # диспетчер задач
пробел - обновить список процессов

первая строка показывает то же самое, что выводит команда uptime
us - количество авторизованных пользователей
load average - общая загрузка системы (за 1, 5 и 15 минут)
Если 1 процессор, то максимальное значение 1 (т.е. 100%), если 4 процессора, то максимальное значение 4 (т.е. 400%)
tasks - общее количество процессов
%CPU(s) - загрузку cpu (сколько процессоров загружено пользователем - us, сколько системой - sy)
MiB Mem - загрузку памяти

d - чтобы ввести задержку обновления

NI (Nice) - показатель, отвечающий за приоритетность процесса (19 - самый низкий приоритет, -20 - высокий)
PR - приоритет (0 - самый приоритетный)
r - чтобы изменить показатель nice, а соответственно и приоритет
После нажатия вводим PID процесса для изменения > Enter > число, на которое хотим изменить
Приоритет меняется автоматически

k (kill) - убить процесс, вводим PID процесса (если ввести 9, то убивает без ожидания завершения процесса, если 15, то ожидает завершения процесса)

shift + p # сортировка по колонке cpu (загрузка процессора)
shift + m # сортировка по колонке mem (загрузка памяти)

htop #
выбрать, по чему сортировать shift + < и далее клавишами вверх-вниз и выбираем
t # отразить в виде дерева колонку Command
/текст # найти процесс по тексту (ищет в колонке Command)
\текст # отфильтровать по тексту (в колонке Command)
u > выбор из списка # фильтр по пользователю

пробел - выделяет строку (несколько строк) желтым и с ними можно произвести какое-то действие
U (большая с Shift) - для отмены выделения
F2 (с fn) - настройки

cat /proc/sys/vm/swappiness # SWAP показывает при каком проценте загрузки системы начинается запись в файл подкачки
(если команда выводит 60, то уже при 40% заполненности оперативной памяти должна начаться запись в файл/раздел подкачки)
Чтобы поправить это значение, надо изменить/создать конфигурационный файл:
/etc/sysctl.conf - сюда можно внести строку: vm.swappiness=80 (или другое число), либо создать новый файл с расширением .conf
после этого надо перезагрузить систему
если нет возможности перезагрузки, можно до конца текущей сессии задать значение swappiness:
sudo sysctl vm.swappiness=80

cat /proc/meminfo # выводит информацию о памяти, в т.ч. о кэше
(при достижении загрузки операционной памяти, достаточной для начала подкачки в SWAP, это может происходить не сразу.
Сначала данные пойдут в кэш и только потом при достижении каких-то параметров в SWAP)

Part 10. Использование утилиты fdisk
sudo fdisk -l # по данной команде интересна информация в конце (Device) о дисках и partitions, а также типе (например, может быть SWAP)
lsblk # информация о дисках деревом


Sata disk:
sda - a - это 1й диск
  sda1 - partition 1
  sda2 - partition 2
sdb - b - это 2й диск (если есть)
sdc - c - это 3й диск (если есть)

Part 11. Использование утилиты df (disk free)
Узнать информацияю о разделах диска (/ - корневой раздел):
df
df -Th

Типы файловых систем (можно найти в команде df -Th):
  ext2/3/4 (extended filesystem):
    позволяет снизить уровень фрагментации файловой системы: система хранит информацию не только о местоположении свободных блоков,
    но и о количестве свободных блоков, расположенных друг за другом, таким образом, при выделении места система находит такой фрагмент,
    в который данные можно записать без фрагментации.
  xfs - предназначен для работы с большими файлами
  btrfs (B-tree filesystem)
  zfs (zetta filesystem)
  f2fs (flash friendly filesystem)
  squashfs - сжимающая файловая система
  
Part 12. Использование утилиты du (disk usage)

du # выводит размер папок
du -sh /var/log # размер только этой папки
du -sh /var/log/* # размеры файлов в этой папке
du -h # размер файлов в человекочитаемом виде
du -h /home # размер содержимого директории

Описание иерархии каталогов согласно FHS
https://ru.wikipedia.org/wiki/FHS

/etc
Общесистемные конфигурационные файлы (имя происходит от лат. et cetera).
/home
Содержит домашние каталоги пользователей, которые в свою очередь содержат персональные настройки и данные пользователя.
Часто размещается на отдельном разделе.
/proc
Виртуальная файловая система, представляющая состояние ядра операционной системы и запущенных процессов в виде файлов.
/sys
Содержит информацию об устройствах, драйверах, а также некоторых свойствах ядра.[5]
/usr
Вторичная иерархия для данных пользователя. Содержит большинство пользовательских приложений и утилит, используемых в многопользовательском режиме.
Может быть смонтирована по сети только для чтения и быть общей для нескольких машин[6].
/var
Изменяемые файлы, такие как файлы регистрации, временные почтовые файлы, файлы спулеров.
/var/cache
Кэш приложений. Такие данные генерируются локально в результате ресурсозатратных вычислений или операций ввода-вывода.
Приложение обязано уметь регенерировать эти данные. Данные файлы могут быть удалены без потери данных.
/var/log
Различные файлы регистрации.

Part 13. Установка и использование утилиты ncdu (NCurses Disk Usage)
ncdu # отображает список файлов и директорий по объёму и позволяет тут же удалять ненужные файлы
ncdu /home # в конкретной директории

Перемещение по списку - кнопки со стрелками вверх и вниз
Открытие папки - Enter
Удаление файла - кнопку d
Выход - q

Part 14. Работа с системными журналами
выводим последние строки:
tail /var/log/auth.log # выведет последние 10 строк
tail -n 20 /var/log/auth.log # выведет последние 20 строк
tail -f /var/log/auth.log # будет добавлять логи в режиме реального времени

Подсветка имени пользователя@сервера:
  в файле ~/.bashrc раскомментировать строку force_color_prompt=yes
  далее либо перезапустить
  либо source .bashrc
  
  Виды логов в разных папках
/var/log/syslog или /var/log/messages содержит глобальный системный журнал, в котором пишутся сообщения с момента запуска системы, от ядра Linux,
различных служб, обнаруженных устройствах, сетевых интерфейсов и много другого.
/var/log/auth.log или /var/log/secure — информация об авторизации пользователей, включая удачные и неудачные попытки входа в систему,
а также задействованные механизмы аутентификации.
/var/log/dmesg — драйвера устройств.

Part 15. Использование планировщика заданий CRON
crontab -e # edit - изменить crontab
crontab -l # вывести содержимое crontab в терминал

В crontab:
  * - каждую минуту/час/день месяца/месяц/день недели
  */2 - каждые 2
  */3 - каждые 3
  
  в command можно писать:
    команду
    bash-скрипт
    команда/bash-скрипт + перенаправление для сохранения/добавления в файл:
      uptime > /home/yulia/logs/mylogs.log (пересохранить с новыми данными)
      uptime >> /home/yulia/logs/mylogs.log (добавить к уже существующим данным)

sudo nano /var/spool/cron/crontabs/yulia # в файле лежит файл, который открывается по команде crontab -e
sudo nano /etc/crontab # в файле лежит crontab, в которую можно вносить задачи от имени root или другого пользователя
